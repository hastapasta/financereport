<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC 
	"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
	"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
    <class name="com.pikefin.businessobjects.LogAlert" table="log_alerts" >
		<id name="logAlertId" column="id" type="integer">
			<generator class="identity"/>
		</id>
		   <property name="type" type="int">
            <column name="type" not-null="true" />
        </property>
		 <property name="dateTimeFired" column="date_time_fired" type="timestamp" />
		 <property name="diff" column="diff" type="double" />
		 <property name="emailSent" column="email_sent" type="java.lang.Boolean" />
		 
		 <property name="obsoleteFrequency" type="string">
            <column name="obsolete_frequency" length="20" />
        </property>
        <property name="limitValue" type="java.lang.Double">
            <column name="limit_value" precision="8" scale="3" not-null="true" />
        </property>
        <property name="obsoleteLimitAdjustment" type="java.lang.Double">
            <column name="obsolete_limit_adjustment" precision="8" scale="3" not-null="true" />
        </property>
		 <many-to-one name="logAlertUser" 
			class="com.pikefin.businessobjects.User" column="user_id" 
			not-null="true" cascade="all" />
		
		<many-to-one name="beforeFactData" 
			class="com.pikefin.businessobjects.FactData" column="bef_fact_data_id" 
			not-null="true" cascade="all" />
		<many-to-one name="afterFactData" 
			class="com.pikefin.businessobjects.FactData" column="aft_fact_data_id" 
			not-null="true" cascade="all" />
		<many-to-one name="logAlertEntity" 
			class="com.pikefin.businessobjects.Entity" column="entity_id" 
			not-null="true" cascade="all" unique="true"/>
		<many-to-one name="logAlertAlert" 
			class="com.pikefin.businessobjects.Alert" column="alert_id" 
			not-null="true" cascade="all" />
   </class>
   
    
     
       
      
       
        
     
      

</hibernate-mapping>
