<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		    http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">
		<!-- Enabled for test only -->
    	<context:component-scan base-package="com.pikefin.tests.dao" />
    	
	<context:component-scan base-package="com.pikefin.businessobjects" />
	
	 <context:component-scan base-package="com.pikefin.dao" />
	 <!-- Enabling transactions -->
   
     <bean name="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
     <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="false"/>
<!-- Property placeholer configurer. this bean helps in replacing the property values from an external property file -->
    <bean id="propertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" >
        <property name="locations" >
           <value>classpath:config.properties</value>
        </property>
    </bean>
 
   <!-- hibernate configuration property file -->
 <bean id="hibernateConfigProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
   <property name="location">
       <value>classpath:hibernate.properties</value>
   </property>
</bean>

<!-- data source configuration -->
    <bean id="dataSource"  class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" >
       <property name="driverClassName" value="${jdbc.driverClassName}" />
        <!-- <property name="url" value="jdbc:mysql://${jdbc.host}:${jdbc.port}/${jdbc.database}?tcpKeepAlive=true"/> -->
       <property  name="url" value="${jdbc.url}" />
       <property name="username" value="${jdbc.user}" />
       <property name="password" value="${jdbc.pass}" />
    </bean>
 
   
    <bean  id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" >
		<property name="dataSource" ref="dataSource"/>
         <property name="mappingLocations">
	     	<list>
	     	    <value>classpath:mapping/*.xml</value>
	    	<!-- <mapping resource="conf/Alert.hbm.xml" />
		<mapping resource="conf/Entity.hbm.xml" />
		<mapping resource="conf/FactData.hbm.xml" />
		<mapping resource="conf/TimeEvent.hbm.xml" />
		<mapping resource="conf/User.hbm.xml" />
		<mapping resource="conf/AlertTarget.hbm.xml" />
		<mapping resource="conf/LogAlert.hbm.xml" />
		<mapping resource="conf/RepeatType.hbm.xml" />
		<mapping resource="conf/Schedule.hbm.xml" />
		<mapping resource="conf/Task.hbm.xml" />
		<mapping resource="conf/JobQueue.hbm.xml" />
		<mapping resource="conf/LogTask.hbm.xml" />
		<mapping resource="conf/Exclude.hbm.xml" />
		<mapping resource="conf/LogNotification.hbm.xml" />
		<mapping resource="conf/Job.hbm.xml" />
		<mapping resource="conf/Metric.hbm.xml" />
		<mapping resource="conf/EntityGroup.hbm.xml" />
		<mapping resource="conf/ExtractSingle.hbm.xml" />
		<mapping resource="conf/EntityAlias.hbm.xml" />
		<mapping resource="conf/Country.hbm.xml" />
		<mapping resource="conf/ExtractTable.hbm.xml" />
		<mapping resource="conf/Column.hbm.xml" />
		<mapping resource="conf/InputSource.hbm.xml" /> -->
	     	</list>
    	</property>
    	<property name="hibernateProperties" ref="hibernateConfigProperties" >
        </property>
    </bean>
    
    
    
    <!-- ########## Start of bean configurations related to  Dao Classes ##########-->
  
    <bean id="userDao" class="com.pikefin.dao.impl.UserDaoImpl">
        <constructor-arg index="0" ref="sessionFactory"/>
    </bean>
    
     <bean id="groupDao" class="com.pikefin.dao.impl.GroupDaoImpl">
        <constructor-arg index="0" ref="sessionFactory"/>
    </bean>
    <!-- ###########	End of bean configurations related to Dao Classes		########## -->
   
   
   
   

</beans>