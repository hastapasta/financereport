<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
		http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.0.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
		<!-- Enabled for test only -->
    	
    	<!-- <context:component-scan base-package="com.pikefin.tests.dao" /> -->
    	<context:annotation-config />
	<context:component-scan base-package="com.pikefin"  />
	
<!-- Property placeholer configurer. this bean helps in replacing the property values from an external property file -->
    <bean id="propertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" >
        <property name="locations" >
           <value>classpath:config.properties</value>
        </property>
    </bean>
 
   <!-- hibernate configuration property file -->
 <bean id="hibernateConfigProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
   <property name="location">
       <value>classpath:hibernate.properties</value>
   </property> 
  
</bean>

<!-- data source configuration -->
    <bean id="dataSource"  class="org.apache.commons.dbcp.BasicDataSource" >
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <!-- <property name="url" value="jdbc:mysql://${jdbc.host}:${jdbc.port}/${jdbc.database}?tcpKeepAlive=true"/> -->
       <property  name="url" value="${jdbc.url}" />
       <property name="username" value="${jdbc.user}" />
       <property name="password" value="${jdbc.pass}" />
    <!--  <property name="defaultAutoCommit" value="false"/> -->
    </bean>
 
   
    <bean  id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" >
		<property name="dataSource" ref="dataSource"/>
         <property name="mappingLocations">
	     	<list>
	     	    <value>classpath:mapping/*.xml</value>
		     	</list>
    	</property>
    <!-- 	<property name="hibernateProperties" ref="hibernateConfigProperties" >
        </property> -->
          <property name="hibernateProperties">
    <props>
    <prop key="hibernate.dialect">org.hibernate.dialect.MySQLInnoDBDialect</prop>
    <!--<prop key="hibernate.show_sql">false</prop>-->
    <!--  <prop key="hibernate.connection.autocommit">false</prop> -->
<!--  <prop key="hibernate.current_session_context_class">managed</prop>  -->
    </props>
      </property> 
    </bean>
    
      <!-- Declaring transaction management -->

<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
<property name="sessionFactory" ref="sessionFactory"/>
<property name="dataSource" ref="dataSource"></property>
<property name="rollbackOnCommitFailure" value="true"></property>
<property name="nestedTransactionAllowed" value="true"></property>
<!-- <property name="failEarlyOnGlobalRollbackOnly" value="true"></property> -->
</bean>
<tx:annotation-driven/>
<!-- END of transaction mangement -->
    
    <!-- ########## Start of bean configurations related to  Dao Classes ##########-->
  <bean id="applicationSetting" class="com.pikefin.ApplicationSetting" factory-method="getInstance"></bean>
  <bean id="velocityEngine" class="org.apache.velocity.app.VelocityEngine" />
  
    <!-- ###########	End of bean configurations related to Dao Classes		########## -->
   
   
   <!-- Enabling Aspect J  AOP -->
   
<aop:aspectj-autoproxy/>
</beans>